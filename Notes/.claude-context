# 🤖 CLAUDE CONTEXT FILE - Roguelite Project

## Filesystem MCP Configuration
```yaml
Project Directory: C:\Users\mzeil\Documents\Notes 2025\Roguelite
Note: This will be changed to the game repository directory later
MCP Tool: Use filesystem for all file operations
Instruction: "Use filesystem mcp to update notes in this directory"
```

## Speech-to-Text Notice
⚠️ Miles uses Voicy for speech-to-text. This tool is sometimes inaccurate. Texts are sometimes not accurately translated. Auto-correct obvious errors.

## Project Overview
We're building a top-down roguelite game (Brotato/Vampire Survivors inspired) in Godot 4.3 with a neon cave-painting aesthetic. Target: 60fps with 100+ enemies on screen.

## Team
- **Miles**: Technical lead, systems programming, learning pixel art
- **Jade**: Art director, learning programming, ability systems
- Both work flexibly during August vacation (afternoons/evenings)

## Current Status (August 2025)
- **Phase**: Week 1 - Foundation
- **Sprint**: Setting up Git, Godot project, basic movement
- **Communication**: Discord (not WhatsApp)
- **Workflow**: Speech-to-text updates via templates

## Directory Structure
```
C:\Users\mzeil\Documents\Notes 2025\Roguelite\
├── 00_START\              # General info & quick start
│   ├── START_HIER.md      # Main starting point
│   └── NIEUWE_STRUCTUUR.md # Structure explanation
├── 01_MILES\              # Miles-specific files
│   ├── DAILY_CHECKLIST.md # Mobile-friendly daily tasks
│   ├── QUICK_REFERENCE.md # Cheatsheet
│   └── Miles_Week1_Tasks.md # Detailed week 1 tasks
├── 02_JADE\               # Jade-specific files
│   ├── DAILY_CHECKLIST.md # Mobile-friendly daily tasks
│   ├── QUICK_REFERENCE.md # Art cheatsheet
│   └── Jade_Week1_Tasks.md # Detailed week 1 tasks
├── 03_SHARED\             # Shared between team
│   ├── DISCORD_MOBILE_SETUP.md # Communication setup
│   └── Rollen_Verdeling.md # Role distribution
├── Development_Guides\    # Technical how-to guides
│   ├── Git_Workflow_Guide.md
│   ├── Claude_Code_Setup.md
│   ├── Godot_Best_Practices.md
│   ├── Performance_Guidelines.md
│   ├── Art_Pipeline.md
│   └── Resolution_Standards.md
├── Templates\             # Speech-to-text templates
│   ├── Speech_To_Claude_Workflow.md
│   ├── DAILY_UPDATE_TEMPLATE.md
│   └── [various templates...]
├── Daily_Updates\         # Auto-generated by Claude
└── [Legacy docs...]       # Historical/reference
```

## Key Technical Decisions
- **Engine**: Godot 4.3 (not Unity)
- **Resolution**: 32x32 sprites (testing 16/32/64)
- **Git**: Feature branches → dev → main
- **Art Style**: Neon glow on dark background
- **Performance**: Object pooling, LOD system
- **Input**: Keyboard + Controller from day 1
- **Architecture**: Component-based, multiplayer-ready

## Current Tasks
### Miles (Programming):
1. Git repository setup
2. Godot project structure
3. Player movement (WASD + controller)
4. Claude Code integration

### Jade (Art):
1. Software setup (Aseprite/Krita)
2. Resolution tests (16/32/64px)
3. Neon style exploration
4. First enemy designs

## Workflow
1. **Daily Updates**: Via Discord using templates
2. **Documentation**: Speech-to-text → Claude updates vault
3. **Code**: Feature branches, PR reviews
4. **Art**: Direct to Git, Discord for feedback

## Important Context
- Working in vacation time (flexible hours)
- No fixed morning schedule (afternoon/evening work)
- Using Voicy for speech-to-text (sometimes inaccurate)
- Miles uses Claude Code for development assistance
- Project timeline: Intensive August, then 1 day/week

## Communication Channels
- Discord: #daily-updates, #blockers, #code, #art
- Git: Feature branches with PR reviews
- Obsidian: This documentation vault
- Trello: Task management (color-coded priorities)

## Tools & Platforms
- **Version Control**: Git/GitHub (PUBLIC repo required for Claude Code)
- **Task Management**: 
  - **Trello**: Board with color-coded cards
  - **Zapier + Trello MCP**: AI-powered task automation (NEW!)
- **Visual Planning**: Miro (moodboards, class diagrams, references)
- **Documentation**: Obsidian (this vault, Markdown only)
- **Communication**: Discord (channels: daily-updates, blockers, code, art)
- **Art Creation**: Aseprite/Krita/Procreate
- **IDE**: VS Code or Cursor (TBD)
- **AI Assistants**: 
  - Claude Desktop (iteration, snippets, discussion)
  - Claude Code (complete implementations)
  - MCP: Filesystem + Zapier/Trello + Godot (research)
- **Speech-to-text**: Voicy (Dutch, auto-correct errors)

## Update Instructions
When updating this context:
1. Keep it concise (< 500 lines)
2. Update status section weekly
3. Add key decisions as made
4. Keep file paths current
5. Note any blockers/changes

## HOW TO USE THIS FILE

### For New Claude Conversations:
```
Start message: "Here's my project context: [paste .claude-context]"
```

### For Claude Code:
```bash
# Method 1: Include in every command
cat .claude-context | claude-code [command]

# Method 2: Set as persistent context
cp .claude-context .claude-instructions
```

### Auto-Update Request:
```
When I say "Update context", Claude should:
1. Read current .claude-context
2. Update with latest project status
3. Save back to .claude-context
4. Confirm what was updated
```

## For Claude/Claude Code
When assisting with this project:
- Assume Godot 4.3 best practices
- Optimize for 100+ enemies (object pooling)
- Use component architecture
- Keep multiplayer in mind
- Follow established file structure
- Update relevant documentation
- Use speech-friendly responses

---
*Last Updated: August 7, 2025*
*Auto-update: Claude should update this when project status changes*